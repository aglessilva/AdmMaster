$(document).ready(function () { $(".sidenav").sidenav(), $(".dropdown-trigger").dropdown(), $(".tooltipped").tooltip(), $(".fixed-action-btn").floatingActionButton(), $("select").formSelect(); var a = '<div class="col row z-depth-3 teal white-text center-align" style="height: 50px; border: 1px solid; border-radius: 10px; padding:12px 0px 0px 0px;">'; a += '<div class="col s1 left-align"><i class="material-icons white-text">loop</i></div>', a += '<div class="col s11 center">Ocorreu um erro na requisi\xe7\xe3o do servi\xe7o, atualize a pagina e tente novamente!</div></div>', $("#Cnpj").mask("99.999.999/9999-99"), $("#Cpf").mask("999.999.999-99"), $("#Nu_Oab").mask("999999/##", { translation: { "#": { pattern: /[^0-9$]/, optional: !0 } } }), $("#clearFrm").click(() => { $("form").trigger("reset"), $("#Status").prop("checked", !0) }), $("#btnClear").click(() => { $("form").trigger("reset") }), $("#btnSearch").bind("click", function (e, b) { let c = {}; c = getObejt(location.pathname.replace(/[^\w\s]/gi, "")), "&gt;&gt;" == b && (b = parseInt($("#pageCount").val())), "&lt;&lt;" == b && (b = 1), $("#DivRenderData").css("display", ""), $("#DivRenderData").empty().html('<div class="progress"><div class="indeterminate"></div></div>'); var d = location.href + "/Search/" + (isNaN(b) ? 1 : b); jQuery.ajax({ type: "Get", url: d, contentType: "application/json; charset=utf-8", dataType: "html", data: c }).done(function (a) { $("#DivRenderData").empty().html(a) }).fail(function (b) { $("#DivRenderData").empty().html(a) }) }), $(".autocomplete").on("input", function () { let a = $(".autocomplete").val(); if (!(a.length < 3)) { var b = "/" + location.pathname.split("/")[1] + "/GetAutoComplete"; jQuery.ajax({ type: "Get", url: b, contentType: "application/json; charset=utf-8", dataType: "json", data: { _campo: a } }).done(function (a) { var b = {}; a.forEach(function (a) { b[a.text] = null }), $("input.autocomplete").autocomplete({ data: b }), $("input.autocomplete").autocomplete("open"), document.getElementsByName("action")[0].disabled = a.length > 0 }).fail(function () { M.toast({ html: '<pre><i class="material-icons white-text">report</i> ERRO: AUTO-COMPLETE!<p>Ocorreu uma falha na busca de valores do auto-complete.</p></pre>', classes: "gray darken-3 rounded" }) }) } }) }); var getObejt = function (b) { let a = {}; switch (b) { case "Empresa": return a = { no_empresa: $("#Empresa").val().toUpperCase(), nu_cnpj: $("#Cnpj").val(), statusfilter: $("#StatusFilter").val() }, { empresa: JSON.stringify(a) }; case "Documento": return a = { ds_documento: $("#Documento").val(), cd_tipo_documento: $("#Tipo").val(), statusfilter: $("#StatusFilter").val() }, { documento: JSON.stringify(a) }; case "Comarca": return a = { sg_uf: $("#Sigla").val(), no_comarca: $("#cidade").val(), statusfilter: $("#StatusFilter").val() }, { comarca: JSON.stringify(a) }; case "Contrato": return a = { ds_contrato: $("#Contrato").val(), statusfilter: $("#StatusFilter").val() }, { contrato: JSON.stringify(a) }; case "Familia": return a = { Ds_Grupo_Familia: $("#Familia").val(), statusfilter: $("#StatusFilter").val() }, { familia: JSON.stringify(a) }; case "Link": return a = { no_sistema: $("#Sistema").val(), statusfilter: $("#StatusFilter").val() }, { link: JSON.stringify(a) }; case "Pedido": return a = { ds_tipo_pedido: $("#dspedido").val(), statusfilter: $("#StatusFilter").val() }, { pedido: JSON.stringify(a) }; case "MotivoAvaliacao": return a = { ds_motivo: $("#ds_motivo").val(), tipo: $("#tipo").val(), statusfilter: $("#StatusFilter").val() }, { motivo: JSON.stringify(a) }; case "Usuario": return a = { cpf: "", nome: $("#nome").val(), login: $("#login").val(), statusfilter: $("#StatusFilter").val(), perfil: $("#idperfil").val(), idgrupo: $("#idgrupo").val(), idsubgrupo: $("#idsubgrupo").val() }, { usuario: JSON.stringify(a) }; case "Questionamento": return a = { ds_questao: $("#ds_questao").val(), cd_tipo_questionamento: $("#cd_tipo_questionamento").val(), cd_tipo_contrato: $("#cd_tipo_contrato").val(), statusfilter: $("#StatusFilter").val() }, { questionamento: JSON.stringify(a) }; case "Advogado": return a = { nu_oab: $("#Nu_Oab").val(), no_advogado: $("#no_advogado").val(), tipo_advogado: $("#tipo_advogado").val(), statusfilter: $("#StatusFilter").val() }, { advogado: JSON.stringify(a) }; case "CentroCusto": return a = { ds_centro_custo: $("#Ds_Centro_Custo").val(), cd_empresa_envolvida: $("#Cd_Empresa_Envolvida").val(), cd_familia: $("#Cd_Familia").val(), statusfilter: $("#StatusFilter").val() }, { centrocusto: JSON.stringify(a) }; case "Calendario": return a = { dt_nacional: $("#dt_nacional").val(), sg_uf: $("#sg_uf").val(), ds_titulo_data: $("#ds_titulo_data").val(), statusfilter: $("#StatusFilter").val() }, { calendario: JSON.stringify(a) }; default: return { id: 100, error: "caminho desconhecido" } } }; function validarCPF(c) { var b, d = 0, e = "", f = 0; do { e = f.toString(); for (var a = 0; a < 10; a++)e += f.toString(); if (e == c) return !1 } while (f++ < 10) for (a = 1; a <= 9; a++)d += parseInt(c.substring(a - 1, a)) * (11 - a); if ((10 == (b = 10 * d % 11) || 11 == b) && (b = 0), b != parseInt(c.substring(9, 10))) return !1; for (a = 1, d = 0; a <= 10; a++)d += parseInt(c.substring(a - 1, a)) * (12 - a); return (10 == (b = 10 * d % 11) || 11 == b) && (b = 0), b == parseInt(c.substring(10, 11)) }