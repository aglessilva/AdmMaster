@model X.PagedList.IPagedList<dynamic>

@if (Model?.Count() > 0)
{
    var listItem = new SelectList(WebAdministrator.Util.Utility.GetSelectLists<Sentenca>(x => x.Cd_Sentenca > 0).Select(y => new SelectListItem { Value = y.Cd_Sentenca.ToString(), Text = y.Ds_Sentenca }).AsEnumerable(), "Value", "Text");
    if (Model is X.PagedList.IPagedList<Justificativa>)
    {

        <table class="table" style="margin:auto; width:98%;">
            <thead>
                <tr>
                    <th style="width:100%;">
                        Parecer
                    </th>
                    <th style="width:200px;" class="left-align">
                        Tipo de Sentença
                    </th>
                    <th style="width:120px;" class="left-align">
                        Status
                    </th>
                    <th style="width:150px;" class="totalitemcount">Total de Registros: @Model.TotalItemCount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Justificativa item in Model)
                {
                    if (item != null)
                    {
                <tr>
                    <td style="width:100%;">
                        @Html.DisplayFor(modelItem => item.Ds_Justificativa_Sentenca)
                    </td>
                    <td style="width:200px;" class="left-align">
                        @Html.DisplayFor(modelItem => listItem.FirstOrDefault(f => f.Value == item.Cd_Sentenca.ToString()).Text)
                    </td>
                    <td style="width:100px;" class="left-align">
                        @(item.Status ? "Ativo" : "Inativo")
                    </td>
                    <td style="width:150px;" class="right-align">
                        <a data="@Json.Serialize(@item).ToString()" onclick="JavaScript: EditParecer(this);" class="btn-small waves-effect waves-light orange darken-3">Editar</a>
                    </td>
                </tr>
                    }
                    else
                    { break; }
                }
            </tbody>
        </table>
    }
    if (Model is X.PagedList.IPagedList<Microsoft.AspNetCore.Mvc.ModelBinding.ModelError>)
    {

        foreach (Microsoft.AspNetCore.Mvc.ModelBinding.ModelError item in Model)
        {
            <label data="0" >@item.ErrorMessage.Trim()</label>
        }
    }
}
else
{
    <div class="col row z-depth-3 red white-text center-align" style="height: 50px; width: 95% ;border: 1px solid; border-radius: 10px; padding:12px 0px 0px 0px;">
        <div class="col s1 left-align"><i class="material-icons white-text">report_problem</i></div>
        <div class="col s11 center">Nenhuma registro foi localizado com o filtro aplicado</div>
    </div>
}
